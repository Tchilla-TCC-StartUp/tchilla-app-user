name: Flutter CI/CD - Tchilla

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build APK and AAB Release
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout do código-fonte
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup do Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.22.0"

      # 3️⃣ Cache de dependências
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            .dart_tool/
            build/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}

      # 4️⃣ Instalar dependências
      - name: Install dependencies
        run: flutter pub get

      # 5️⃣ Build APK (Release)
      - name: Build APK (Release)
        run: flutter build apk --release

      # 6️⃣ Build AAB (Release)
      - name: Build AAB (Release)
        run: flutter build appbundle --release

      # 7️⃣ Upload APK como artefato
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: tchilla-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      # 8️⃣ Upload AAB como artefato
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: tchilla-release-aab
          path: build/app/outputs/bundle/release/app-release.aab

 release:
  name: Create GitHub Release
  needs: build
  runs-on: ubuntu-latest

  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download APK
      uses: actions/download-artifact@v4
      with:
        name: tchilla-release-apk
        path: artifacts

    - name: Download AAB
      uses: actions/download-artifact@v4
      with:
        name: tchilla-release-aab
        path: artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: "Tchilla Release v1.0.${{ github.run_number }}"
        draft: false
        prerelease: false

    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/app-release.apk
        asset_name: tchilla-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload AAB to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/app-release.aab
        asset_name: tchilla-release.aab
        asset_content_type: application/octet-stream
